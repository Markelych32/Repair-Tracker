version: "3.8"

networks:
  backend:
    driver: bridge
volumes:
  bd-data:
    driver: local
  kafka-1:
    driver: local
  kafka-2:
    driver: local
  kafka-3:
    driver: local

services:
  database:
    container_name: database
    restart: always
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT:-5434}:5432"
    networks:
      - backend
#    volumes:
#      - bd-data:/var/lib/postgresql/data

  kafka-1:
    image: bitnami/kafka:3.6.2
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=fI20d2psTtulveZHTQvtPw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9090,EXTERNAL://${HOSTNAME:-localhost}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#    volumes:
#      - kafka-1:/bitnami/kafka
    networks:
      - backend

  kafka-2:
    image: bitnami/kafka:3.6.2
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=fI20d2psTtulveZHTQvtPw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9090,EXTERNAL://${HOSTNAME:-localhost}:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#    volumes:
#      - kafka-2:/bitnami/kafka
    networks:
      - backend

  kafka-3:
    image: bitnami/kafka:3.6.2
    ports:
      - "9096:9096"
    environment:
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_KRAFT_CLUSTER_ID=fI20d2psTtulveZHTQvtPw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9090,EXTERNAL://${HOSTNAME:-localhost}:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#    volumes:
#      - kafka-3:/bitnami/kafka
    networks:
      - backend

  backend:
    networks:
      - backend
    build:
      dockerfile: Backend/Dockerfile
      args:
        JAR_FILE: Backend/target/Backend-0.0.1-SNAPSHOT.jar
    container_name: backend-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - database

  scheduler:
    networks:
      - backend
    build:
      dockerfile: Scheduler/Dockerfile
      args:
        JAR_FILE: Scheduler/target/Scheduler-0.0.1-SNAPSHOT.jar
    container_name: scheduler-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka-1:9092, kafka-2:9094, kafka-3:9096
    depends_on:
      - database
      - backend
      - kafka-1
      - kafka-2
      - kafka-3

  email-sender:
    networks:
      - backend
    build:
      dockerfile: Sender/Dockerfile
      args:
        JAR_FILE: Sender/target/Sender-0.0.1-SNAPSHOT.jar
    container_name: email-sender-service
    ports:
      - "8083:8083"
    environment:
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka-1:9092, kafka-2:9094, kafka-3:9096
    depends_on:
      - scheduler
